swagger: "2.0"
info:
  description: "Todo list"
  version: "1.0.0"
  title: "todos"
  contact:
    email: "ficettiesteban@gmail.com"
host: "localhost"
basePath: "/"
tags:
- name: "todos"
  description: "operators for the todo list"
schemes:
- "http"
paths:
  /todo:
    post:
      tags:
      - "todos"
      summary: "Add a new todo to the list"
      description: "Add a new todo to the list"
      operationId: "createTodo"
      consumes:
      - "application/json"
      produces:
      - "application/xml"
      parameters:
      - in: "body"
        name: "body" 
        required: true
        schema:
          $ref: "/create.html"
      responses:
        "200":
          description: 'todo Created'
          schema:
            $ref: "/index.html"
        "405":
          description: "Invalid input"
    put:
      tags:
      - "todos"
      summary: "Update an existing todo"
      description: "Update an existing todo"
      operationId: "updateTodo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "/update.html"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "todo not found"
        "405":
          description: "Validation exception"
        "201":
          description: 'todo Updated'
          schema:
            $ref: "/index.html"
  /todo/{todoId}:
    get:
      tags:
      - "todo"
      summary: "Find todo by ID"
      description: "Returns a single todo"
      operationId: "gettodoById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "todoId"
        in: "path"
        description: "ID of todo to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/todo"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "todo not found"
    post:
      tags:
      - "todo"
      summary: "Updates a todo in the store with form data"
      description: ""
      operationId: "updatetodoWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "todoId"
        in: "path"
        description: "ID of todo that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the todo"
        required: false
        type: "string"
      - name: "status"
        in: "formData"
        description: "Updated status of the todo"
        required: false
        type: "string"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
      - "todo"
      summary: "Deletes a todo"
      description: ""
      operationId: "deletetodo"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "todoId"
        in: "path"
        description: "todo id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "todo not found"
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
definitions:
  todo:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      todoId:
        type: "integer"
        format: "int64"
      titulo:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      created_by:
        type: "string"
      completed:
        type: "boolean"
    xml:
      name: "todo"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"